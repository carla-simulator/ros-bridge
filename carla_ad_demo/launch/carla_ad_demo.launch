<!-- -->
<launch>
  <!-- launch a complete carla-ros-environment with an ad agent that steers the ego-vehicle -->

  <!-- carla parameter -->
  <arg name='host' default='localhost'/> <!-- host the carla server is running on -->
  <arg name='port' default='2000'/> <!-- port of the carla server -->
  <arg name="town" default="Town01"/> <!-- the carla town to load-->
  <arg name='timeout' default='10'/> <!-- the carla timeout for server communication -->
  <arg name='passive' default='False'/> <!-- enable/disable passive mode -->
  <arg name='synchronous_mode' default='True'/> <!-- should the synchronous mode be used? Enable to get reproducible results independent of the system workload -->
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='False'/><!-- should the ros bridge wait for a vehicle control command before proceeding with the next tick -->
  <arg name='fixed_delta_seconds' default='0.05'/><!-- frequency of the carla ticks -->

  <!-- spectator camera parameter -->
  <arg name="role_name" default="ego_vehicle"/> <!-- role name of the ego vehicle (used for identification in many nodes) -->
  <arg name='spawn_point' default='127.4,-195.4,2,0,0,180'/> <!-- fixed spawn point, set to "" for a random spawn point -->
  <arg name="target_speed" default="30"/> <!-- target speed in km/h that the agent tries to follow -->
  <arg name="avoid_risk" default="True"/> <!-- should the agent avoid crashs and respect red traffic lights? -->

  <!-- Set fixed goal (actual route is still random) -->
  <node pkg="rostopic" type="rostopic" name="publish_goal"
      args="pub /carla/ego_vehicle/goal geometry_msgs/PoseStamped '{ 'pose': { 'position': { 'x': 157.9, 'y': 29.8, 'z': 0.0 }, 'orientation': { 'x': 0.0, 'y': 0.0, 'z': 0.70711, 'w': 0.70711 } } }' -l"/>

  
  <!-- ===================================================== -->

  <!-- The ros bridge -->
  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='town' value='$(arg town)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='passive' value='$(arg passive)'/>
    <arg name='synchronous_mode' value='$(arg synchronous_mode)'/>
    <arg name='synchronous_mode_wait_for_vehicle_control_command' value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
    <arg name='fixed_delta_seconds' value='$(arg fixed_delta_seconds)'/>
  </include>

  <!-- the ego vehicle, that will be controlled by the carla_ad_agent -->
  <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch">
    <arg name="objects_definition_file" value='$(find carla_spawn_objects)/config/objects.json'/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point_ego_vehicle" value="$(arg spawn_point)"/>
    <arg name="spawn_sensors_only" value="false"/>
  </include>

  <!-- The agent to control the ego vehicle -->
  <include file="$(find carla_ad_agent)/launch/carla_ad_agent.launch">
    <arg name="target_speed" value="$(arg target_speed)" />
    <arg name="role_name" value="$(arg role_name)" />
    <arg name="avoid_risk" value="$(arg avoid_risk)" />
  </include>

  <!-- Provide a route and access to the CARLA waypoint API (required by carla_ad_agent) -->
  <include file="$(find carla_waypoint_publisher)/launch/carla_waypoint_publisher.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='role_name' value='$(arg role_name)'/>
  </include>
  
  <!-- Visualize the ego vehicle (and support overriding the control) -->
  <include file="$(find carla_manual_control)/launch/carla_manual_control.launch">
    <arg name='role_name' value='$(arg role_name)'/>
  </include>

</launch>
